
# parser_DatcomParser_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AIRFOIL NAME LPAREN RPAREN NEWCASE DYNAMICTABLE STATICTABLE ASYFLPTABLE SYMFLPTABLE FLOAT FLOATVECTOR INTEGER EQUALS ENDNAMELIST COMMA BOOL CASEID NAMELIST TRIM DIM DAMP PART DERIV DUMP SAVE\n        file : statement file\n        \n        file : statement\n        \n        statement : NEWCASE\n        \n        statement : CASEID\n        statement : DYNAMICTABLEstatement : STATICTABLEstatement : SYMFLPTABLEstatement : ASYFLPTABLEstatement : NAMELIST terms ENDNAMELIST\n        term : NAME EQUALS FLOAT\n        | NAME EQUALS INTEGER\n        term : NAME EQUALS BOOLstatement : AIRFOILstatement : TRIMstatement : DIM NAMEstatement : DAMPstatement : PARTstatement : DERIV NAMEstatement : DUMP NAMEterms : termterms : terms COMMA term\n        term : NAME LPAREN INTEGER RPAREN EQUALS FLOATVECTOR\n        | NAME LPAREN INTEGER RPAREN EQUALS FLOAT\n        | NAME LPAREN INTEGER RPAREN EQUALS INTEGER\n        '
    
_lr_action_items = {'NEWCASE':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[3,3,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'CASEID':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[4,4,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'DYNAMICTABLE':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[5,5,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'STATICTABLE':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[6,6,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'SYMFLPTABLE':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[7,7,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'ASYFLPTABLE':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[8,8,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'NAMELIST':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[9,9,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'AIRFOIL':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[10,10,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'TRIM':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[11,11,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'DIM':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[12,12,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'DAMP':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[13,13,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'PART':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[14,14,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'DERIV':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[15,15,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'DUMP':([0,2,3,4,5,6,7,8,10,11,13,14,21,22,23,24,],[16,16,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-15,-18,-19,-9,]),'$end':([1,2,3,4,5,6,7,8,10,11,13,14,17,21,22,23,24,],[0,-2,-3,-4,-5,-6,-7,-8,-13,-14,-16,-17,-1,-15,-18,-19,-9,]),'NAME':([9,12,15,16,25,],[20,21,22,23,20,]),'ENDNAMELIST':([18,19,28,29,30,31,35,36,37,],[24,-20,-21,-10,-11,-12,-24,-22,-23,]),'COMMA':([18,19,28,29,30,31,35,36,37,],[25,-20,-21,-10,-11,-12,-24,-22,-23,]),'EQUALS':([20,33,],[26,34,]),'LPAREN':([20,],[27,]),'FLOAT':([26,34,],[29,37,]),'INTEGER':([26,27,34,],[30,32,35,]),'BOOL':([26,],[31,]),'RPAREN':([32,],[33,]),'FLOATVECTOR':([34,],[36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,2,],[1,17,]),'statement':([0,2,],[2,2,]),'terms':([9,],[18,]),'term':([9,25,],[19,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> statement file','file',2,'p_file_statement_append','parser.py',358),
  ('file -> statement','file',1,'p_file_from_statement','parser.py',367),
  ('statement -> NEWCASE','statement',1,'p_newcase','parser.py',373),
  ('statement -> CASEID','statement',1,'p_caseid','parser.py',380),
  ('statement -> DYNAMICTABLE','statement',1,'p_dynamictable','parser.py',414),
  ('statement -> STATICTABLE','statement',1,'p_statictable','parser.py',423),
  ('statement -> SYMFLPTABLE','statement',1,'p_symflptable','parser.py',432),
  ('statement -> ASYFLPTABLE','statement',1,'p_asymflptable','parser.py',453),
  ('statement -> NAMELIST terms ENDNAMELIST','statement',3,'p_namelist','parser.py',508),
  ('term -> NAME EQUALS FLOAT','term',3,'p_scalar_term','parser.py',513),
  ('term -> NAME EQUALS INTEGER','term',3,'p_scalar_term','parser.py',514),
  ('term -> NAME EQUALS BOOL','term',3,'p_bool_term','parser.py',520),
  ('statement -> AIRFOIL','statement',1,'p_airfoil','parser.py',529),
  ('statement -> TRIM','statement',1,'p_trim','parser.py',533),
  ('statement -> DIM NAME','statement',2,'p_dim','parser.py',536),
  ('statement -> DAMP','statement',1,'p_damp','parser.py',540),
  ('statement -> PART','statement',1,'p_part','parser.py',544),
  ('statement -> DERIV NAME','statement',2,'p_deriv','parser.py',548),
  ('statement -> DUMP NAME','statement',2,'p_dump','parser.py',552),
  ('terms -> term','terms',1,'p_term_terms','parser.py',555),
  ('terms -> terms COMMA term','terms',3,'p_terms','parser.py',559),
  ('term -> NAME LPAREN INTEGER RPAREN EQUALS FLOATVECTOR','term',6,'p_array_term','parser.py',569),
  ('term -> NAME LPAREN INTEGER RPAREN EQUALS FLOAT','term',6,'p_array_term','parser.py',570),
  ('term -> NAME LPAREN INTEGER RPAREN EQUALS INTEGER','term',6,'p_array_term','parser.py',571),
]
